"""
Matplotlib Animation Example

author: Jake Vanderplas
email: vanderplas@astro.washington.edu
website: http://jakevdp.github.com
license: BSD
Please feel free to use and modify this, but keep the above information. Thanks!
"""

import numpy as np
from matplotlib import pyplot as plt
from matplotlib import animation

a = [218.6312255859375, 218.6312255859375, 218.6312255859375, 218.6312255859375, 218.6312255859375, 218.6312255859375,
     124.63524627685547, 124.63524627685547, 84.00457763671875, 84.00457763671875, 84.02559661865234, 84.02559661865234,
     99.22999572753906, 99.22999572753906, 99.22999572753906, 143.71060180664062, 143.71060180664062, 143.71060180664062,
     143.4640655517578, 143.4640655517578, 143.4640655517578, 136.1667022705078, 136.1667022705078, 136.1667022705078,
     135.6464080810547, 135.6464080810547, 135.6464080810547, 99.05933380126953, 99.05933380126953, 207.430419921875,
     207.430419921875, 207.430419921875, 207.430419921875, 207.430419921875, 153.20779418945312, 153.20779418945312,
     153.20779418945312, 153.20779418945312, 152.39468383789062, 152.39468383789062, 152.39468383789062, 152.82662963867188,
     152.82662963867188, 152.82662963867188, 152.82662963867188, 129.05523681640625, 129.05523681640625, 129.05523681640625,
     140.84901428222656, 140.84901428222656, 140.84901428222656, 123.16157531738281, 123.16157531738281, 123.16157531738281,
     123.51661682128906, 123.51661682128906, 123.51661682128906, 123.36471557617188, 123.36471557617188, 123.36471557617188,
     125.81694030761719, 125.81694030761719, 125.81694030761719, 122.69566345214844, 122.69566345214844, 122.69566345214844,
     122.69566345214844, 124.37157440185547, 124.37157440185547, 124.37157440185547, 165.61009216308594, 165.61009216308594,
     165.61009216308594, 165.61009216308594, 166.16798400878906, 166.16798400878906, 166.16798400878906, 166.16798400878906,
     167.66539001464844, 167.66539001464844, 167.66539001464844, 167.66539001464844, 169.45013427734375, 169.45013427734375,
     169.45013427734375, 169.45013427734375, 171.06520080566406, 171.06520080566406, 171.06520080566406, 171.06520080566406,
     168.87319946289062, 168.87319946289062, 168.87319946289062, 171.30950927734375, 171.30950927734375, 171.30950927734375,
     171.30950927734375, 171.30950927734375, 167.40208435058594, 167.40208435058594, 167.40208435058594, 173.67913818359375,
     173.67913818359375, 173.67913818359375, 173.67913818359375, 174.0574951171875,174.0574951171875, 174.0574951171875,
     174.0574951171875, 172.56285095214844, 172.56285095214844, 172.56285095214844, 172.56285095214844, 171.64547729492188,
     171.64547729492188, 171.64547729492188, 171.64547729492188, 171.49069213867188, 171.49069213867188, 171.49069213867188,
     171.49069213867188, 166.62686157226562, 166.62686157226562, 166.62686157226562, 166.62686157226562, 166.62686157226562,
     165.283447265625, 165.283447265625, 165.283447265625, 165.283447265625, 168.43714904785156, 168.43714904785156,
     168.43714904785156, 168.43714904785156, 169.86395263671875, 169.86395263671875, 169.86395263671875, 169.86395263671875,
     168.99830627441406, 168.99830627441406, 168.99830627441406, 168.99830627441406, 169.09254455566406, 169.09254455566406,
     169.09254455566406, 169.09254455566406, 165.67347717285156, 165.67347717285156, 165.67347717285156, 165.67347717285156,
     167.0813446044922, 167.0813446044922, 167.0813446044922, 167.0813446044922, 167.90858459472656, 167.90858459472656,
     167.90858459472656, 167.90858459472656, 167.62318420410156, 167.62318420410156, 167.62318420410156, 167.62318420410156,
     168.48629760742188, 168.48629760742188, 168.48629760742188, 168.48629760742188, 94.85501861572266, 94.85501861572266,
     96.76336669921875, 96.76336669921875, 97.23727416992188, 97.23727416992188, 97.23727416992188, 97.22908020019531,
     97.22908020019531, 97.3634033203125, 97.3634033203125, 97.3634033203125, 97.33203887939453, 97.33203887939453,
     96.41535949707031, 96.41535949707031, 96.41535949707031, 96.54424285888672, 96.54424285888672, 96.58293914794922,
     96.58293914794922, 96.58293914794922, 144.9617156982422, 144.9617156982422, 144.9617156982422, 147.62582397460938,
     147.62582397460938, 147.62582397460938, 147.290771484375, 147.290771484375, 147.290771484375, 147.290771484375,
     147.0087890625, 147.0087890625, 147.0087890625, 147.0087890625, 147.37588500976562, 147.37588500976562,
     147.37588500976562, 147.01918029785156, 147.01918029785156, 147.01918029785156, 147.01918029785156,
     146.81582641601562, 146.81582641601562, 146.81582641601562, 145.2208251953125, 145.2208251953125, 145.2208251953125,
     145.2208251953125, 147.05096435546875, 147.05096435546875, 147.05096435546875, 147.05096435546875, 147.84063720703125,
     147.84063720703125, 147.84063720703125, 148.2267608642578, 148.2267608642578, 148.2267608642578, 148.2267608642578,
     147.85159301757812, 147.85159301757812, 147.85159301757812, 147.85159301757812, 147.7698211669922, 147.7698211669922,
     147.7698211669922, 147.4141082763672, 147.4141082763672, 147.4141082763672, 147.4141082763672, 145.63356018066406,
     145.63356018066406, 145.63356018066406, 146.14230346679688, 146.14230346679688, 146.14230346679688, 146.14230346679688,
     144.18504333496094, 144.18504333496094, 144.18504333496094, 144.18504333496094, 140.97206115722656, 140.97206115722656,
     140.97206115722656, 141.35560607910156, 141.35560607910156, 141.35560607910156,
     141.35560607910156, 141.44192504882812, 141.44192504882812, 141.44192504882812, 146.92784118652344, 146.92784118652344,
     146.92784118652344, 146.92784118652344]
# First set up the figure, the axis, and the plot element we want to animate
fig = plt.figure()
ax = plt.axes(xlim=(0, 2), ylim=(-2, 2))
ax.set_yticklabels([])
ax.set_xticklabels([])
ax.grid(False)
plt.axis('off')
line, = ax.plot([], [], lw=2)

# initialization function: plot the background of each frame
def init():
    line.set_data([], [])
    return line,

# animation function.  This is called sequentially

def animate(i):
    x = np.linspace(0, 2, 1000)

    y = (a[i]/120) * np.sin(2 * np.pi * (x - 0.01 * i))
    line.set_data(x, y)
    return line,

# call the animator.  blit=True means only re-draw the parts that have changed.
anim = animation.FuncAnimation(fig, animate, init_func=init,
                               frames=200, interval=20, blit=True)

# save the animation as an mp4.  This requires ffmpeg or mencoder to be
# installed.  The extra_args ensure that the x264 codec is used, so that
# the video can be embedded in html5.  You may need to adjust this for
# your system: for more information, see
# http://matplotlib.sourceforge.net/api/animation_api.html
#anim.save('basic_animation.mp4', fps=30, extra_args=['-vcodec', 'libx264'])

plt.show()


#plt.ion()


